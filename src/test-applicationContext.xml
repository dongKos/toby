<?xml version="1.0" encoding="UTF-8"?>

<!-- <beans xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"> -->
<beans xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://www.springframework.org/schema/beans">
	<!-- <aop:config>
		<aop:pointcut expression="execution(* *..*ServiceImpl.upgrade*(..))" id="transactionPointcut" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut" />
	</aop:config> -->
	
	
<!-- xml 파일은 setter를 이용한 의존성 주입에 대응한다
	name 속성은 생성자의 이름
	ref는 주입하는 오브젝트의 이름이다 -->

	<!-- 사용자가 설정한 연결정보를 factory가 아닌 xml 로 하는 방법 -->
	<!-- <bean id="connectionMaker" class="xmlTest.dao.DConnectionMaker" /> 
	
	<bean id="userDao" class="xmlTest.dao.UserDao">
		<property name="connectionMaker" ref="connectionMaker" />
	</bean> -->
	
	<!-- 사용자 정의 클래스가 아닌 설정정보를 xml로 하는 방법 
		기본적으로 setter메소드라고 생각하면 된다. 
		setter메소드의 타입을 스프링이 읽고 자동으로 변화해준다	-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/testdb?characterEncoding=UTF-8&amp;serverTimezone=UTC&amp;userSSL=false" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="mailSender" class="toby.user.service.DummyMailSender">
	</bean>
	
	<!-- <bean id="jdbcContext" class="xmlTest.dao.JdbcContext">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	
	<bean id="userDao" class="toby.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="jdbcContext" ref="jdbcContext" /> -->
	</bean>
	
	<!-- <bean id="userService" class="toby.user.service.UserServiceTx">
		<property name="transactionManager" ref="transactionManager" />
		<property name="userService" ref="userServiceImpl" />
	</bean> -->
	
	<!-- 6-36 -->
	<!-- <bean id="userService" class="toby.user.service.TxProxyFactoryBean">
		<property name="target" ref="userServiceImpl" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="pattern" value="upgradeLevels" />
		<property name="serviceInterface" value="toby.user.service.UserService" />
	</bean> -->
	
	<!-- <bean id="userServiceImpl" class="toby.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean> -->
	
	<!-- 6-52 -->
	<!-- <bean id="transactionPointcut" 
		class="toby.proxy.NameMatchClassMethodPointcut">
		<property name="mappedClassName" value="*ServiceImpl" />
		<property name="mappedName" value="upgrade*" />
	</bean> -->
	
	<!-- 6-65 -->
	<bean id="testUserService" 
		class="toby.test.UserServiceTest$TestUserService"
		parent="userService" />
	<!-- <bean id="testUserService" class="toby.user.service.TestUserService"
		parent="userService">
	</bean> -->
		
	<!-- 6-53 -->
	<bean id="userService" class="toby.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
	<!-- 6-57 -->
	<!-- <bean id="transactionPointcut" 
		class="toby.proxy.NameMatchClassMethodPointcut">
		<property name="mappedClassName" value="*NotServiceImpl" />
		<property name="mappedName" value="upgrade*" />
	</bean> -->
	<!-- <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
		<property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" />
	</bean> -->
	
	<!-- <bean class="toby.user.service.TransactionAdvice" id="transactionAdvice">
		<property name="transactionManager" ref="transactionManager"/>
	</bean> -->
	
	<!-- <bean id="transactionAdvisor"
        class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice" />
        <property name="pointcut" ref="transactionPointcut" />
	</bean> -->
	
	
	<!-- <bean class="org.springframework.aop.support.DefaultPointcutAdvisor"
		id="transactionAdvisor">
		<property name="advice" ref="transactionAdvice" />
		<property name="pointcut" ref="transactionPointcut" />
	</bean> -->
	
	<!-- <tx:advice transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" timeout="30"/>
			<tx:method name="upgrade*" propagation="REQUIRES_NEW"
				isolation="SERIALIZABLE"/>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>	 -->
	
	<!-- 6-78 -->
	<aop:config>
		<!-- <aop:pointcut expression="execution(* *..*ServiceImpl.*(..))" id="transactionPointcut" /> -->
		<aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />
	</aop:config>
	
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="get*" propagation="REQUIRED" read-only="true" timeout="30"/>
			<tx:method name="upgrade*" propagation="REQUIRES_NEW"
				isolation="SERIALIZABLE"/>
			<tx:method name="*" propagation="REQUIRED"/> -->
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<tx:annotation-driven/>
	
		
</beans>